@echo off
REM üöÄ DEPLOY SCRIPT PARA NETLIFY - PayPal Hosted Button Production (Windows)
REM Este script automatiza el proceso de deploy a Netlify con validaciones

echo üöÄ INICIANDO DEPLOY A PRODUCCI√ìN - Quiet the Noise
echo ==================================================

REM 1. Verificar que estamos en el directorio correcto
echo ‚ÑπÔ∏è  Verificando directorio del proyecto...
if not exist "package.json" (
    echo ‚ùå No se encuentra package.json. Ejecuta desde la ra√≠z del proyecto.
    pause
    exit /b 1
)
if not exist "netlify-deploy" (
    echo ‚ùå No se encuentra netlify-deploy/. Ejecuta desde la ra√≠z del proyecto.
    pause
    exit /b 1
)
echo ‚úÖ Directorio correcto verificado

REM 2. Verificar archivos cr√≠ticos
echo ‚ÑπÔ∏è  Verificando archivos cr√≠ticos...
set missing_files=0

if not exist "netlify-deploy\index.html" (
    echo ‚ùå Falta: netlify-deploy\index.html
    set missing_files=1
)
if not exist "netlify-deploy\netlify.toml" (
    echo ‚ùå Falta: netlify-deploy\netlify.toml
    set missing_files=1
)
if not exist "netlify-deploy\js\config.js" (
    echo ‚ùå Falta: netlify-deploy\js\config.js
    set missing_files=1
)
if not exist "netlify-deploy\js\paypal-hosted-handler.js" (
    echo ‚ùå Falta: netlify-deploy\js\paypal-hosted-handler.js
    set missing_files=1
)
if not exist "netlify-deploy\js\purchase-handler.js" (
    echo ‚ùå Falta: netlify-deploy\js\purchase-handler.js
    set missing_files=1
)
if not exist "netlify-deploy\js\production-email.js" (
    echo ‚ùå Falta: netlify-deploy\js\production-email.js
    set missing_files=1
)
if not exist "netlify-deploy\css\styles.css" (
    echo ‚ùå Falta: netlify-deploy\css\styles.css
    set missing_files=1
)
if not exist "netlify-deploy\assets\book-cover.jpg" (
    echo ‚ùå Falta: netlify-deploy\assets\book-cover.jpg
    set missing_files=1
)

if %missing_files%==1 (
    echo ‚ùå Archivos cr√≠ticos faltantes. No se puede continuar.
    pause
    exit /b 1
)
echo ‚úÖ Todos los archivos cr√≠ticos presentes

REM 3. Verificar configuraci√≥n PayPal
echo ‚ÑπÔ∏è  Verificando configuraci√≥n PayPal...
findstr /c:"DG2V4FLX49RM8" netlify-deploy\index.html >nul
if errorlevel 1 (
    echo ‚ùå Button ID PayPal no encontrado
    pause
    exit /b 1
)
findstr /c:"BAAdtIP4N39_Grc65N4rXgCcuW2TEEB5MyXfq1r3BGmNWFTaK3OMhKc_3zIZl4oI622oMTkhOcSJ_OriNo" netlify-deploy\index.html >nul
if errorlevel 1 (
    echo ‚ùå Client ID PayPal no encontrado
    pause
    exit /b 1
)
echo ‚úÖ Configuraci√≥n PayPal de producci√≥n verificada

REM 4. Verificar configuraci√≥n Supabase
echo ‚ÑπÔ∏è  Verificando configuraci√≥n Supabase...
findstr /c:"qfuyqrlspdvxoxkgvlss.supabase.co" netlify-deploy\js\config.js >nul
if errorlevel 1 (
    echo ‚ùå Configuraci√≥n Supabase no encontrada
    pause
    exit /b 1
)
echo ‚úÖ Configuraci√≥n Supabase verificada

REM 5. Verificar netlify.toml
echo ‚ÑπÔ∏è  Verificando netlify.toml...
findstr /c:"publish = \"netlify-deploy\"" netlify.toml >nul
if errorlevel 1 (
    echo ‚ùå netlify.toml no apunta a netlify-deploy/
    pause
    exit /b 1
)
echo ‚úÖ netlify.toml configurado correctamente

REM 6. Crear backup
echo ‚ÑπÔ∏è  Creando backup de configuraci√≥n...
set backup_dir=backup-%date:~-4,4%%date:~-10,2%%date:~-7,2%-%time:~0,2%%time:~3,2%%time:~6,2%
set backup_dir=%backup_dir: =%
mkdir "%backup_dir%" 2>nul
copy "netlify-deploy\js\config.js" "%backup_dir%\" >nul
copy "netlify-deploy\index.html" "%backup_dir%\" >nul
echo ‚úÖ Backup creado en %backup_dir%\

REM 7. Pre-deploy checklist
echo.
echo ‚ÑπÔ∏è  PRE-DEPLOY CHECKLIST:
echo =====================
echo ‚úÖ Archivos cr√≠ticos presentes
echo ‚úÖ PayPal Button ID: DG2V4FLX49RM8
echo ‚úÖ PayPal Client ID: BAAdtIP4N39_Grc65N4rXgCcuW2TEEB5MyXfq1r3BGmNWFTaK3OMhKc_3zIZl4oI622oMTkhOcSJ_OriNo
echo ‚úÖ Supabase URL: qfuyqrlspdvxoxkgvlss.supabase.co
echo ‚úÖ Publish directory: netlify-deploy
echo ‚úÖ Backup creado: %backup_dir%\

REM 8. Confirmaci√≥n del usuario
echo.
set /p confirm="¬øProceder con el deploy a producci√≥n? [y/N]: "
if /i not "%confirm%"=="y" (
    echo ‚ö†Ô∏è  Deploy cancelado por el usuario
    pause
    exit /b 0
)

REM 9. Git operations
echo ‚ÑπÔ∏è  Preparando repositorio Git...

REM Verificar si Git est√° instalado
git --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Git no est√° instalado o no est√° en el PATH
    echo ‚ÑπÔ∏è  Debes hacer el commit y push manualmente:
    echo    git add .
    echo    git commit -m "PayPal hosted button integration - Production ready"
    echo    git push origin main
    pause
    exit /b 1
)

REM Verificar si hay cambios
git status --porcelain >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Error verificando estado de Git
    pause
    exit /b 1
)

REM Agregar cambios
echo ‚ÑπÔ∏è  Agregando cambios al repositorio...
git add netlify-deploy/
git add *.md
git add netlify.toml

REM Commit
echo ‚ÑπÔ∏è  Creando commit...
git commit -m "PayPal hosted button integration - Production ready

- Integrated official PayPal hosted button (ID: DG2V4FLX49RM8)
- Added paypal-hosted-handler.js for robust button management
- Enhanced error handling and fallback mechanisms
- Added paypal-test.html for production debugging
- Updated all production files in netlify-deploy/
- Ready for live customer transactions"

if errorlevel 1 (
    echo ‚ÑπÔ∏è  No hay cambios para commit o error en commit
)

REM Push
echo ‚ÑπÔ∏è  Enviando cambios al repositorio...
git push origin main
if errorlevel 1 (
    echo ‚ùå Error enviando cambios. Verifica tu conexi√≥n y permisos.
    pause
    exit /b 1
)
echo ‚úÖ Cambios enviados a GitHub

REM 10. Post-deploy instructions
echo.
echo üéâ DEPLOY COMPLETADO EXITOSAMENTE!
echo =================================
echo.
echo ‚ÑπÔ∏è  PR√ìXIMOS PASOS:
echo 1. Ir a tu dashboard de Netlify
echo 2. Verificar que el deploy autom√°tico se inici√≥
echo 3. Una vez completado, probar:
echo    ‚Ä¢ P√°gina principal: https://tu-sitio.netlify.app/
echo    ‚Ä¢ P√°gina de test: https://tu-sitio.netlify.app/paypal-test.html
echo.
echo ‚ÑπÔ∏è  VALIDACIONES RECOMENDADAS:
echo ‚Ä¢ ‚úÖ Bot√≥n PayPal se carga correctamente
echo ‚Ä¢ ‚úÖ Console sin errores JavaScript
echo ‚Ä¢ ‚úÖ Prueba de compra con cuenta sandbox
echo ‚Ä¢ ‚úÖ Verificar datos en Supabase
echo ‚Ä¢ ‚úÖ Confirmar recepci√≥n de email
echo.
echo ‚ö†Ô∏è  IMPORTANTE:
echo ‚Ä¢ Haz una compra de prueba SANDBOX antes de anunciar
echo ‚Ä¢ Monitorea los logs de la consola en las primeras horas
echo ‚Ä¢ Ten el dashboard de Supabase abierto para verificar datos
echo.
echo ‚úÖ ¬°El sistema est√° listo para recibir clientes reales! üöÄ

REM 11. Abrir URLs importantes
echo.
set /p open_urls="¬øAbrir URLs importantes en el navegador? [y/N]: "
if /i "%open_urls%"=="y" (
    start https://app.netlify.com/sites
    start https://supabase.com/dashboard/project/qfuyqrlspdvxoxkgvlss
    echo ‚úÖ URLs importantes abiertas en el navegador
) else (
    echo ‚ÑπÔ∏è  URLs importantes:
    echo ‚Ä¢ Netlify: https://app.netlify.com/sites
    echo ‚Ä¢ Supabase: https://supabase.com/dashboard/project/qfuyqrlspdvxoxkgvlss
)

echo.
echo ‚úÖ Deploy script completado. ¬°Buena suerte con las ventas! üí∞
pause
